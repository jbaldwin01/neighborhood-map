{"version":3,"sources":["images/powered-by-foursquare-blue.png","components/Header.js","components/ListView.js","components/Map.js","components/pages/MainPage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Header","_this","this","react_default","a","createElement","id","className","onClick","props","toggleListView","xmlns","viewBox","d","Component","ListView","_this$props","myLocations","updateQuery","handleClick","showListView","aria-label","type","placeholder","onChange","event","target","value","map","location","key","venue","name","Map","role","MainPage","state","query","filteredLocations","venues","updateLocations","markers","setState","match","RegExp","escapeRegexp","filter","test","showingLocations","isMatched","toLowerCase","includes","marker","find","setMap","_this$props2","animateMarker","infoWindow","concat","address","image","isVisible","length","components_Header","components_ListView","components_Map","App","initMap","Object","assertThisInitialized","window","google","maps","document","getElementById","center","lat","lng","zoom","InfoWindow","mapMarkers","mapVenue","contentString","Marker","position","title","animation","Animation","DROP","addListener","slice","setAnimation","BOUNCE","setContent","open","getVenues","_this2","fetch","then","response","json","data","groups","items","renderMap","catch","error","console","log","url","index","getElementsByTagName","script","src","async","defer","parentNode","insertBefore","loadMapAPI","_this3","Route","exact","path","render","pages_MainPage","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","BrowserRouter","src_App_0","URL","process","href","origin","addEventListener","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.31c1a00c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/powered-by-foursquare-blue.f45b0a12.png\";","import React, { Component } from 'react';\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <header>\r\n        <h1>Neighborhood Restaurants\r\n          <nav \r\n            id=\"menu\" \r\n            className=\"header-menu\"\r\n            onClick={() => this.props.toggleListView()}\r\n            >\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\r\n              <path d=\"M2 6h20v3H2zm0 5h20v3H2zm0 5h20v3H2z\"/>\r\n            </svg>\r\n          </nav>\r\n        </h1>\r\n        <hr/>\r\n      </header>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react'\r\n\r\nclass ListView extends Component {\r\n  render() {\r\n    const { myLocations, updateQuery, handleClick, showListView } = this.props\r\n    return (\r\n      myLocations &&\r\n      <div className={(showListView === true) ? \"options-box open\" : \"options-box\"}>\r\n        <div>\r\n          <input\r\n            aria-label=\"Filter locations\"\r\n            id=\"places-search\"\r\n            type=\"search\"\r\n            placeholder=\"Enter restaurant name\"\r\n            onChange={(event) => updateQuery(event.target.value)}\r\n          />\r\n        </div>\r\n        <div>\r\n          <ul className=\"locations-list\">\r\n            {myLocations.map((location) => {\r\n              return (\r\n                <li key={location.venue.id} onClick={() => handleClick(location.venue.id)}>\r\n                  {location.venue.name}\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ListView","import React, { Component } from 'react'\r\n\r\nclass Map extends Component {\r\n  render () {\r\n    const { showListView } = this.props\r\n    return (\r\n      <div id=\"map\" role=\"application\" className={(showListView === true) ? \"map push\" : \"map\"}></div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Map","import React, { Component } from 'react'\r\nimport escapeRegexp from 'escape-string-regexp'\r\nimport Header from '../Header.js'\r\nimport ListView from '../ListView.js'\r\nimport Map from '../Map.js'\r\nimport image from '../../images/powered-by-foursquare-blue.png'\r\n\r\nclass MainPage extends Component {\r\n  state = {\r\n    query: '',\r\n    showListView: true\r\n  }\r\n  filteredLocations = []\r\n\r\n  updateQuery = (query) => {\r\n    const { venues, updateLocations, markers, map } = this.props\r\n    this.setState({ query: query })\r\n    // only show matching markers\r\n    if (query) {\r\n      // filter list of locations\r\n      const match = new RegExp(escapeRegexp(query), 'i') // ignore case\r\n      this.filteredLocations = venues.filter((location) => match.test(location.venue.name))\r\n    } else {\r\n      this.filteredLocations = venues\r\n    }\r\n    updateLocations({ showingLocations: this.filteredLocations })\r\n\r\n    venues.map(location => {\r\n      const isMatched = location.venue.name.toLowerCase().includes(query.toLowerCase())\r\n      const marker = markers.find(marker => marker.id === location.venue.id)\r\n      if (isMatched) {\r\n        marker.setMap(map)\r\n      } else {\r\n        marker.setMap(null)\r\n      }\r\n      return marker\r\n    })\r\n  }\r\n\r\n  handleClick = (id) => {\r\n    // this.toggleListView()\r\n    const { venues, markers, map, animateMarker, infoWindow } = this.props\r\n    const marker = markers.find(marker => marker.id === id)\r\n    const location = venues.find(location => location.venue.id === id)\r\n    const contentString = `${location.venue.name}<p/>${(location.venue.location.address) || 'Address not available'}<p/><img class=\"fourSquare-image\" src=${image} alt=\"Powered by Foursquare\">`\r\n    animateMarker(marker, infoWindow, contentString, map)\r\n  }\r\n\r\n  toggleListView = () => {\r\n    const isVisible = this.state.showListView === false ? true : false\r\n    this.setState({ showListView: isVisible })\r\n  }\r\n\r\n  render() {\r\n    const { updateQuery, handleClick, toggleListView } = this\r\n    const { showingLocations } = this.props\r\n    const { showListView } = this.state\r\n\r\n    let myLocations\r\n    if (showingLocations.length > 0) {\r\n      myLocations = showingLocations\r\n    } else {\r\n      myLocations = this.filteredLocations\r\n    }\r\n\r\n    return (\r\n      <main className=\"main-page\">\r\n        <Header\r\n          toggleListView={toggleListView}\r\n        />\r\n        <div className=\"container\">\r\n          <ListView\r\n            myLocations={myLocations}\r\n            updateQuery={updateQuery}\r\n            handleClick={handleClick}\r\n            showListView={showListView}\r\n          />\r\n          <Map \r\n            showListView={showListView}\r\n          />\r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n}\r\nexport default MainPage\r\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\nimport MainPage from './components/pages/MainPage'\nimport './App.css'\nimport  image from './images/powered-by-foursquare-blue.png'\n\nclass App extends Component {\n\n  state = {\n    venues: [],\n    markers: [],\n    showingLocations: [],\n    map: null,\n    infoWindow: null\n  }\n\n  componentDidMount() {\n    this.getVenues()\n  }\n\n  updateLocations = (showingLocations) => {\n    this.setState({ showingLocations })\n  }\n\n  /*\n   * Async request to retrieve venues dynamically.\n   * Set renderMap() as callback function of setState() to \n   * ensure renderMap() gets called after async call to \n   * getVenues() has completed and vanues have been stored in state.\n   */\n  getVenues() {\n    const endpoint = \"https://api.foursquare.com/v2/venues/explore?\"\n    const client_id = \"FDAMFVN2CLVPRFZSHTJCWLYP34V0FZ1U2N0EU3TO4QUDMBHZ\"\n    const client_secret = \"1I1TBKGC1CI5Z5LMTCJJRUCFLK5AWPANS4QHHEGMDQXEMJWY\"\n    const near = \"Hartford\"\n    const query = \"live music\"\n    const limit = 12\n    fetch(`${endpoint}v=20180323&client_id=${client_id}&client_secret=${client_secret}&near=${near}&query=${query}&limit=${limit}`)\n    .then(response => response.json())\n    .then(data => {\n      this.setState({\n        venues: data.response.groups[0].items\n      },this.renderMap()) // set renderMap() as callback function\n    })\n    .catch(error => {console.log(`ERROR: ${error}`)})\n  }\n\n  /*\n   * Display the map on the page\n   */\n  renderMap() {\n    loadMapAPI(\"https://maps.googleapis.com/maps/api/js?key=AIzaSyDs8apc-US8cnhHdTl8djgb6tPxXwfGjzg&callback=initMap\")\n    window.initMap = this.initMap\n  }\n\n  initMap = () => {\n    const { animateMarker } = this\n    const { venues } = this.state\n    const map = new window.google.maps.Map(document.getElementById('map'), {\n      center: {lat: 41.7658, lng: -72.6734},\n      zoom: 12\n    })\n    this.setState({ map })\n\n    const infoWindow = new window.google.maps.InfoWindow()\n    \n    // Add location markers to the map\n    let mapMarkers = venues.map(mapVenue => {\n      let contentString = `${mapVenue.venue.name}<p/>${mapVenue.venue.location.address || 'Address not available'}<p/><img class=\"fourSquare-image\" src=${image} alt=\"Powered by Foursquare\">`\n      \n      let marker = new window.google.maps.Marker({\n        id: mapVenue.venue.id,\n        position: {lat: mapVenue.venue.location.lat, lng: mapVenue.venue.location.lng},\n        title: mapVenue.venue.name,\n        animation: window.google.maps.Animation.DROP,\n        map: map\n      })\n\n      // Marker clicked\n      marker.addListener('click', () => animateMarker(marker, infoWindow, contentString, map))\n      return marker\n    })\n    this.setState({ markers: mapMarkers })\n    this.setState({ showingLocations: venues.slice() })\n    this.setState({ infoWindow: infoWindow })\n  }\n\n  animateMarker = (marker, infoWindow, contentString, map) => {\n    // Animiate marker when clicked\n     marker.setAnimation(window.google.maps.Animation.BOUNCE); // Bounce marker\n     marker.setAnimation(null) // Stop bounce\n\n    // Change infoWindow content\n    infoWindow.setContent(contentString)\n    \n    // Open infoWindow\n    infoWindow.open(map, marker)\n  }\n\n  render() {\n    return(\n      <div className=\"App\">\n        <Route exact path='/' render={() => (\n            <MainPage\n              venues={this.state.venues}\n              markers={this.state.markers}\n              map={this.state.map}\n              showingLocations={this.state.showingLocations}\n              updateLocations={this.updateLocations}\n              animateMarker={this.animateMarker}\n              infoWindow={this.state.infoWindow}\n            />\n          )}\n        />\n      </div>\n    )\n  }\n}\n\n/*\n * Create the script element for the map API\n * i.e. <script src=\"url\" async defer></script>\n */\nfunction loadMapAPI(url) {\n  const index = window.document.getElementsByTagName(\"script\")[0]\n  const script = window.document.createElement(\"script\")\n  script.src = url\n  script.async = true\n  script.defer = true\n  index.parentNode.insertBefore(script, index)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter><App /></BrowserRouter>, \n  document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}